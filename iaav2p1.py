# -*- coding: utf-8 -*-
"""iaAv2P1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15eCdHaSmygQMXiq_3bqLB_S1mTkW6V6i

Questão 1
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline

from sklearn.svm import SVC
import seaborn as sns
from sklearn import svm

from sklearn.pipeline import Pipeline
from sklearn.preprocessing import StandardScaler
from sklearn.preprocessing import MinMaxScaler

from sklearn.model_selection import cross_val_predict
from sklearn import metrics
from sklearn.model_selection import train_test_split

from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import classification_report
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import train_test_split

"""**Questão1** Inspecione os dados. Quantos exemplos você tem? Qual o intervalo de valores de cada feature? """

#QUANTIDADE
df= pd.read_csv('wineQuality_val.data')
df

#INTERVALOS
df.describe()

"""**Questão2** Normalize os dados de modo que eles fiquem todos no mesmo intervalo. """

#NORMALIZACAO
df.value_counts(normalize=True)

"""**Questão3** Treine um SVM para predizer a qualidade dos vinhos."""

#SVM
classifier =SVC(kernel ='rbf', random_state=0)
classifier.fit(x_train,y_train)

sns.pairplot(df[['fixed.acidity','volatile.acidity','citric.acid','residual.sugar','chlorides','free.sulfur.dioxide','total.sulfur.dioxide','density','pH','sulphates','alcohol','quality']], hue='quality')

"""**Questão4** Classifique os dados de validação."""

#CLASSIFICAÇÃO
classificador=classifier.predict(x_test)
classificador

"""**Questão5** Calcule a matriz de confusão e acurácia no conjunto de validação. """

#MATRIZ DE CONFUSAO E ACURACIA
rf=RandomForestClassifier()
rf.fit(x_train,y_train)
pred_rf=rf.predict(x_test)

print(classification_report(y_test,pred_rf))

cross_val = cross_val_score(estimator=rf, X=x_train,y=y_train,cv=10)
print(cross_val.mean())

#MATRIZ DE CONFUSAO E ACURACIA

n3=KNeighborsClassifier(n_neighbors=5)
n3.fit(x_train,y_train)
pred_n3=n3.predict(x_test)

print(classification_report(y_test,pred_n3))

cross_val = cross_val_score(estimator=n3, X=x_train,y=y_train,cv=10)
print(cross_val.mean())

from sklearn.ensemble import ExtraTreesClassifier
modelo =ExtraTreesClassifier()
modelo.fit(x_treino, y_treino)

resultado = modelo.score(x_teste, y_teste)
print("Acuracia: ", resultado)

""".

# Load in the red wine data from the UCI ML website.
df = pd.read_csv('http://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv',sep=';')
# Take a look
print(df.head(10))
# Data dimensionality (rows, colums)
print(df.shape)
# Data distributing
df.info()

from sklearn.model_selection import train_test_split

x_treino, x_teste, y_treino, y_teste=train_test_split(x,y,test_size=0.2)
""".