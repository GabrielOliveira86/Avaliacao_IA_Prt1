# -*- coding: utf-8 -*-
"""iaAv2P2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rmSNQm0_VIoMoEAi6morOyAwxYaMVNWd

**Gabriel Oliveira dos Santos 
  //  Vitor Luan Pires do Prado**
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline
from sklearn.datasets import load_breast_cancer
from sklearn.svm import SVC
import seaborn as sns
from sklearn import svm

from sklearn.pipeline import Pipeline
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import MinMaxScaler
from sklearn.preprocessing import StandardScaler

from sklearn.model_selection import cross_val_predict
from sklearn import metrics
from sklearn.model_selection import train_test_split

from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import classification_report
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import train_test_split

from sklearn.naive_bayes import GaussianNB

#QUANTIDADE
df_val= pd.read_csv('wineQuality_val.data')
df_test= pd.read_csv('wineQuality_test.data')
df_train= pd.read_csv('wineQuality_train.data')

#INTERVALOS
df_val.describe()

#Treinamento e normalização
y=df_train['quality']
x=df_train.drop('quality',axis=1)

yt=df_test['quality']
xt=df_test.drop('quality',axis=1)


x,xt,y, yt = train_test_split(x, y,test_size=0.2)

model= GaussianNB()
model.fit(x,y)
pred=model.predict(x)

sc = MinMaxScaler()

x = sc.fit_transform(x)
xt = sc.fit_transform(xt)

print(pd.crosstab(y,pred,rownames=['Real'],colnames=['Predito'],margins=True))

print(accuracy_score(y, pred))

#MATRIZ DE CONFUSAO E ACURACIA
from sklearn.ensemble import RandomForestClassifier
rf=RandomForestClassifier()
rf.fit(x,y)
pred_rf=rf.predict(xt)

print(classification_report(yt,pred_rf))

cross_val = cross_val_score(estimator=rf, X=x,y=y,cv=10)
#print(cross_val.mean())

"""Acurácia SVM 76%

Acurácia NaiveBayes 74%

O NaiveBayes se mostrou mais preciso que o SVM com uma diferença média de 2% a 4% entre eles
"""